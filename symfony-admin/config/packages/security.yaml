security:
    providers:
        token_provider:
            id: App\Security\TokenUserProvider
    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        login:
            pattern: ^/login$
            security: false
            
        main:
            lazy: true
            provider: token_provider
            custom_authenticators:
                - App\Security\TokenAuthenticator
            entry_point: App\Security\TokenAuthenticator
            logout:
                path: /logout
                target: app_login
                invalidate_session: true
                delete_cookies:
                    PHPSESSID: { path: null, domain: null }

    access_control:
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
